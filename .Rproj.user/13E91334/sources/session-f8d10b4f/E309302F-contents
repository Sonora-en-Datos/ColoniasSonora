library(tidyverse)
library(forcats)
library(janitor)
library(mapgl)
library(sf)

colonia_manzana <- read_csv("datos/mza_ine_limpio_utf8.csv", 
                            col_types = cols(cve_col = col_character())) %>% 
  clean_names() %>% 
  select(cvegeo, cve_col, nom_col) 
agregadostotales <- c("Total AGEB urbana", "Total de la localidad urbana", "Total del municipio","Total de la entidad" )

censoagebsonora2020 <- read.csv("datos/conjunto_de_datos_ageb_urbana_26_cpv2020.csv",  stringsAsFactors = F, na.strings = c("*","N/D"),
                                colClasses = c(ENTIDAD="character",
                                               MUN="character",
                                               LOC="character",
                                               AGEB="character", MZA="character",
                                               POBTOT = "numeric",
                                               POBFEM = "numeric",
                                               POBMAS = "numeric",
                                               P_15YMAS = "numeric", 
                                               P_60YMAS = "numeric", 
                                               P_5YMAS = "numeric",
                                               P_15YMAS = "numeric", 
                                               P6A11_NOA = "numeric",
                                               P12A14NOA = "numeric",
                                               P15PRI_IN = "numeric",
                                               P15SEC_IN = "numeric", 
                                               P15YM_SE_F = "numeric",
                                               PSINDER = "numeric",
                                               VIVTOT ="numeric",
                                               TVIVHAB = "numeric",
                                               TVIVPAR ="numeric",
                                               VIVPAR_HAB = "numeric",
                                               TVIVPARHAB = "numeric",
                                               VPH_DSADMA = "numeric",
                                               VPH_S_ELEC = "numeric", 
                                               VPH_AGUAFV = "numeric",
                                               VPH_PISOTI = "numeric",
                                               PRO_OCUP_C = "numeric",
                                               VPH_REFRI = "numeric",
                                               VPH_INTER = "numeric",
                                               VPH_CEL = "numeric", 
                                               GRAPROES = "numeric"
                                )) %>%
  select(ENTIDAD, NOM_ENT,MUN, NOM_MUN, LOC, NOM_LOC, AGEB, MZA, POBTOT ,
         POBFEM,
         POBMAS,
         P_5YMAS ,
         P_15YMAS , 
         P_18YMAS , 
         P_60YMAS , 
         P6A11_NOA ,
         P12A14NOA ,
         P15PRI_IN ,
         P15SEC_IN , 
         P15YM_SE_F ,
         PSINDER ,
         VIVTOT,
         TVIVHAB ,
         TVIVPAR ,
         VIVPAR_HAB ,
         TVIVPARHAB ,
         VPH_DSADMA ,
         VPH_S_ELEC , 
         VPH_AGUAFV ,
         VPH_PISOTI ,
         PRO_OCUP_C ,
         VPH_REFRI ,
         VPH_INTER ,
         VPH_CEL , 
         GRAPROES ) %>% 
  clean_names() %>% 
  mutate(censo=2020) %>% 
  mutate(tothog=if_else(is.na(tvivparhab) & vivtot>0, vivtot, tvivparhab),
         vph_dsadma=if_else(is.na(tvivparhab) & vivtot>0, 0, vph_dsadma),
         vph_s_elec=if_else(is.na(tvivparhab) & vivtot>0, 0, vph_s_elec),
         vph_aguafv=if_else(is.na(tvivparhab) & vivtot>0, 0, vph_aguafv),
         vph_pisoti=if_else(is.na(tvivparhab) & vivtot>0, 0, vph_pisoti),
         vph_refri=if_else(is.na(tvivparhab) & vivtot>0, 0, vph_refri),
         vph_inter=if_else(is.na(tvivparhab) & vivtot>0, 0, vph_inter),
         vph_cel=if_else(is.na(tvivparhab) & vivtot>0, 0, vph_cel),
         gratot=p_15ymas*graproes,
         pro_ocup_tot=pro_ocup_c*vivpar_hab)  %>% 
  unite(cvegeo,c(entidad,mun,loc,ageb,mza),  sep = "", remove = TRUE) %>%
  filter(!nom_loc %in% agregadostotales)%>% 
  mutate(nom_loc= ifelse(nom_loc=="San Carlos (San Carlos Nuevo Guaymas)", "San Carlos",
                         ifelse(nom_loc=="Heroica Ciudad de Cananea","Heroica Cananea",
                                ifelse(nom_loc=="San Pedro o el Saucito (San Pedro el Saucito)", "San Pedro el Saucito",
                                       ifelse(nom_loc=="Miguel Alemán (La Doce)", "Miguel Alemán",
                                              ifelse(nom_loc=="Ingeniero Luis B. Sánchez", "Ing. Luis B. Sánchez", nom_loc)))))) %>% 
  left_join(colonia_manzana, by=c("cvegeo")) %>% 
  filter(!is.na(pobtot))


censoagebsonora2020 [is.na(censoagebsonora2020)] <- 0  
colonias_estatal <- censoagebsonora2020 %>% 
  group_by(cve_col, nom_col,nom_loc) %>% 
  summarise(pobtot=sum(pobtot),
            pobfem=sum(pobfem),
            pobmas=sum(pobmas),
            p_5ymas=sum(p_5ymas),
            p_15ymas=sum(p_15ymas),
            p_18ymas=sum(p_18ymas),
            p_60ymas=sum(p_60ymas),
            gratot=sum(gratot),
            vivtot=sum(vivtot)
  ) %>% 
  mutate(p_menos18=if_else(p_18ymas!=0, pobtot-p_18ymas,0),
         p_18a59=p_18ymas-p_60ymas) %>% 
  mutate(graproes=round(gratot/p_15ymas,1)) %>% 
  filter(cve_col!=0) %>% 
  mutate(mujeres=round(pobfem*100/(pobfem+pobmas),1),
         hombres=round(pobmas*100/(pobfem+pobmas),1),
         menores=round(p_menos18*100/pobtot,1),
         adultos_nmay=round(p_18a59*100/pobtot,1),
         adultos_may=round(p_60ymas*100/pobtot,1)) %>% 
  mutate(pobtot_pretty= prettyNum(pobtot, big.mark=",",scientific=FALSE),
         vivtot_pretty= prettyNum(vivtot, big.mark=",",scientific=FALSE),
         agregado=mujeres+hombres) %>% 
  mutate(hombres=as.character(if_else(agregado==0, "NA", paste0(hombres,"%"))),
         mujeres=as.character(if_else(agregado==0, "NA", paste0(mujeres,"%"))),
         menores=as.character(if_else(agregado==0, "NA", paste0(menores,"%"))),
         adultos_nmay=as.character(if_else(agregado==0, "NA", paste0(adultos_nmay,"%"))),
         adultos_may=as.character(if_else(agregado==0, "NA", paste0(adultos_may,"%")))
         ) %>% 
  select(cve_col, nom_col,nom_loc, vivtot,pobtot, mujeres, hombres, menores, adultos_nmay, adultos_may, graproes,pobtot_pretty,vivtot_pretty, agregado)









capa_col <- st_read("shapes/INE_Limpio/INE_Limpio.shp", quiet = TRUE) # Censo 2020 ya procesado con la información de colonia

capa_col<- st_transform(capa_col, crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0") %>% 
  clean_names() %>% 
  st_make_valid()
capa_col <- capa_col %>% 
  filter(!is.na(cve_ent))  

capa_col_info_2020 <- capa_col %>% 
  left_join(colonias_estatal, by=c("cve_col", "nom_col")) %>% 
  filter(!is.na(vivtot)) %>% 
  mutate(nom_loc=toupper(nom_loc.x)) %>% 
  mutate(escolaridad=case_when(graproes>=0  & graproes<6~ 0,
                               #graproes>=1 & graproes<5 ~ "Primaria no terminada",
                               graproes>=6 & graproes<9 ~ 1,
                               graproes>=9 & graproes<13 ~ 2,
                               graproes>=13 & graproes<15 ~ 3,
                               graproes>=15 & graproes<18 ~ 4,
                               graproes>=18  ~ 5),
         escolor=case_when(graproes>=0  & graproes<6~ "#960E53",
                           #graproes>=1 & graproes<5 ~ "Primaria no terminada",
                           graproes>=6 & graproes<9 ~ "#B94645",
                           graproes>=9 & graproes<13 ~ "#EAB287",
                           graproes>=13 & graproes<15 ~ "#6fc0ba",
                           graproes>=15 & graproes<18 ~ "#368990",
                           graproes>=18  ~ "#376795")
         ) %>% 
           mutate(graproes=as.character(if_else(agregado==0, "NA", paste0(graproes," años")))
  ) 


capa_col_info_2020$popup <- glue::glue(
  "<strong>{capa_col_info_2020$nom_loc}, 2020</strong>
  <br><strong>COL. {capa_col_info_2020$nom_col}</strong>
  <br><strong>Viviendas totales: </strong>{capa_col_info_2020$vivtot_pretty}
  <br><strong>Habitantes: </strong>{capa_col_info_2020$pobtot_pretty} personas
  <br><strong>Mujeres: </strong>{capa_col_info_2020$mujeres}
  <br><strong>Hombres: </strong>{capa_col_info_2020$hombres}
  <br><strong>Menos de 18 años: </strong>{capa_col_info_2020$menores}
  <br><strong>18-59 años: </strong>{capa_col_info_2020$adultos_nmay}
  <br><strong>60 y más años: </strong>{capa_col_info_2020$adultos_may}
  <br><strong>Escolaridad promedio: </strong>{capa_col_info_2020$graproes}
  <br><strong>www.sonoraendatos.com</strong>"
)


capa_col_info_2020$tooltip <- glue::glue(
  "<strong>COL. {capa_col_info_2020$nom_col}</strong>
  <br>(click para mayor información)"
)


paleta <- c( "#960E53","#B94645", "#EAB287","#6fc0ba" , "#368990","#376795" )
q_class <- step_equal_interval(
  data = capa_col_info_2020,
  column = "escolaridad",
  n = 6,
  colors = paleta
)





colonias_info_2020 <- maplibre(center = c(  -109.94079,27.48642),
                               zoom = 11,
                               style= carto_style("positron")
) %>% 
  add_fill_layer(
    id = "2020",
    source = capa_col_info_2020,
    fill_color = q_class$expression,
    fill_opacity = 0.5,
    fill_outline_color = q_class$expression,
    popup = "popup",
    tooltip = "tooltip",
    hover_options = list(
      fill_color = q_class$expression,
      fill_opacity = 0.8)
  ) %>% 
  add_legend(
    "Nivel escolar aprobado promedio<br>de las personas de 15 años o más<br>
    en las colonias de Sonora, 2020",
    values = c(
      "Primaria no aprobada",
      "Primaria",
      "Secundaria",
      "Preparatoria",
      "Licenciatura",
      "Posgrado"
    ),
    colors = alpha(paleta,0.8),
    type = "categorical",
    position = "bottom-left",
    style = legend_style(
      background_opacity = 0.8
    )
  ) %>% 
  add_fullscreen_control(position = "top-left") %>%  
  add_navigation_control() 

colonias_info_2020


htmlwidgets::saveWidget(colonias_info_2020,"docs/index.html", title= "Colonias de Sonora - Sonora en Datos", selfcontained = F, libdir = "lib")

colonias_estatal_save <- colonias_estatal %>%  
  select(nom_loc, cve_col,nom_col,vivtot,pobtot,mujeres, hombres,menores,adultos_nmay,adultos_may,graproes ) %>% 
  mutate(nivel_escolaridad_prom=case_when(graproes>=0  & graproes<6~ "Primaria no aprobada/terminada",
                               #graproes>=1 & graproes<5 ~ "Primaria no terminada",
                               graproes>=6 & graproes<9 ~ "Primaria",
                               graproes>=9 & graproes<13 ~ "Secundaria",
                               graproes>=13 & graproes<15 ~ "Preparatoria",
                               graproes>=15 & graproes<18 ~ "Licenciatura",
                               graproes>=18  ~ "Posgrado") 
         ) %>% 
  rename(viviendas_totales=vivtot,poblacion_total=pobtot,pctj_mujeres=mujeres, pctj_hombres=hombres,
         pctj_menores18=menores,pctj_adultos18_59=adultos_nmay,pctj_60ymas=adultos_may,escolaridad_años_prom=graproes,
         )

write.csv(colonias_estatal_save, "resultados/sonora_colonias_2020.csv", row.names = FALSE, fileEncoding = "utf-8")

